annotations:
  - border_color: '#808080FF'
    border_style: ''
    color: '#FFFFFFFF'
    line_end: null
    line_start: null
    thickness: 1
    type: line
    x1: 360.0
    y1: 200.0
    x2: 360.0
    y2: 200.0
    z_index: 0
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: ''
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -40.0
    y1: 40.0
    z_index: 1
nodes:
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n0
    image_definition: '1002'
    label: S1-site1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -360
    y: 80
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n1
    image_definition: '1002'
    label: S2-site1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -240
    y: 80
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n2
    image_definition: '1001'
    label: L1-site1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -360
    y: 200
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n3
    image_definition: '1001'
    label: L2-site1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -240
    y: 200
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n4
    image_definition: '1001'
    label: BG1-site1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -360
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        slot: 7
        type: physical
      - id: i9
        label: Ethernet1/8
        slot: 8
        type: physical
      - id: i10
        label: Ethernet1/9
        slot: 9
        type: physical
      - id: i11
        label: Ethernet1/10
        slot: 10
        type: physical
      - id: i12
        label: Ethernet1/11
        slot: 11
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n5
    image_definition: '1001'
    label: BG2-site1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -240
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        slot: 7
        type: physical
      - id: i9
        label: Ethernet1/8
        slot: 8
        type: physical
      - id: i10
        label: Ethernet1/9
        slot: 9
        type: physical
      - id: i11
        label: Ethernet1/10
        slot: 10
        type: physical
      - id: i12
        label: Ethernet1/11
        slot: 11
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n6
    image_definition: '1001'
    label: BG1-site2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 160
    y: 0
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        slot: 7
        type: physical
      - id: i9
        label: Ethernet1/8
        slot: 8
        type: physical
      - id: i10
        label: Ethernet1/9
        slot: 9
        type: physical
      - id: i11
        label: Ethernet1/10
        slot: 10
        type: physical
      - id: i12
        label: Ethernet1/11
        slot: 11
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n7
    image_definition: '1001'
    label: BG2-site2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 360
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        slot: 7
        type: physical
      - id: i9
        label: Ethernet1/8
        slot: 8
        type: physical
      - id: i10
        label: Ethernet1/9
        slot: 9
        type: physical
      - id: i11
        label: Ethernet1/10
        slot: 10
        type: physical
      - id: i12
        label: Ethernet1/11
        slot: 11
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n8
    image_definition: '1002'
    label: S1-site2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 240
    y: 80
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n9
    image_definition: '1002'
    label: S2-site2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 360
    y: 80
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n10
    image_definition: '1001'
    label: L1-site2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 240
    y: 200
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n11
    image_definition: '1001'
    label: L2-site2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 360
    y: 200
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        slot: 7
        type: physical
      - id: i9
        label: Ethernet1/8
        slot: 8
        type: physical
      - id: i10
        label: Ethernet1/9
        slot: 9
        type: physical
      - id: i11
        label: Ethernet1/10
        slot: 10
        type: physical
      - id: i12
        label: Ethernet1/11
        slot: 11
        type: physical
      - id: i13
        label: Ethernet1/12
        slot: 12
        type: physical
      - id: i14
        label: Ethernet1/13
        slot: 13
        type: physical
      - id: i15
        label: Ethernet1/14
        slot: 14
        type: physical
      - id: i16
        label: Ethernet1/15
        slot: 15
        type: physical
  - boot_disk_size: null
    configuration: ums-7b892935-24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: true
    id: n12
    image_definition: null
    label: unmanaged-switch-0
    node_definition: unmanaged_switch
    ram: null
    tags: []
    x: 880
    y: -40
    interfaces:
      - id: i0
        label: port0
        slot: 0
        type: physical
      - id: i1
        label: port1
        slot: 1
        type: physical
      - id: i2
        label: port2
        slot: 2
        type: physical
      - id: i3
        label: port3
        slot: 3
        type: physical
      - id: i4
        label: port4
        slot: 4
        type: physical
      - id: i5
        label: port5
        slot: 5
        type: physical
      - id: i6
        label: port6
        slot: 6
        type: physical
      - id: i7
        label: port7
        slot: 7
        type: physical
      - id: i8
        label: port8
        slot: 8
        type: physical
      - id: i9
        label: port9
        slot: 9
        type: physical
      - id: i10
        label: port10
        slot: 10
        type: physical
      - id: i11
        label: port11
        slot: 11
        type: physical
      - id: i12
        label: port12
        slot: 12
        type: physical
      - id: i13
        label: port13
        slot: 13
        type: physical
      - id: i14
        label: port14
        slot: 14
        type: physical
      - id: i15
        label: port15
        slot: 15
        type: physical
      - id: i16
        label: port16
        slot: 16
        type: physical
      - id: i17
        label: port17
        slot: 17
        type: physical
      - id: i18
        label: port18
        slot: 18
        type: physical
      - id: i19
        label: port19
        slot: 19
        type: physical
      - id: i20
        label: port20
        slot: 20
        type: physical
      - id: i21
        label: port21
        slot: 21
        type: physical
      - id: i22
        label: port22
        slot: 22
        type: physical
      - id: i23
        label: port23
        slot: 23
        type: physical
  - boot_disk_size: null
    configuration: bridge1
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n13
    image_definition: null
    label: ext-conn-0
    node_definition: external_connector
    ram: null
    tags: []
    x: 800
    y: 240
    interfaces:
      - id: i0
        label: port
        slot: 0
        type: physical
  - boot_disk_size: null
    configuration: |-
      # this is a shell script which will be sourced at boot
      hostname inserthostname-here
      # configurable user account
      USERNAME=cisco
      PASSWORD=cisco
      # no password for tc user by default
      TC_PASSWORD=
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n14
    image_definition: null
    label: S-1
    node_definition: server
    ram: null
    tags: []
    x: -440
    y: 440
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
  - boot_disk_size: null
    configuration: |-
      # this is a shell script which will be sourced at boot
      hostname inserthostname-here
      # configurable user account
      USERNAME=cisco
      PASSWORD=cisco
      # no password for tc user by default
      TC_PASSWORD=
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n15
    image_definition: null
    label: S-2
    node_definition: server
    ram: null
    tags: []
    x: -120
    y: 440
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
  - boot_disk_size: null
    configuration: |-
      # this is a shell script which will be sourced at boot
      hostname inserthostname-here
      # configurable user account
      USERNAME=cisco
      PASSWORD=cisco
      # no password for tc user by default
      TC_PASSWORD=
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n16
    image_definition: null
    label: S-3
    node_definition: server
    ram: null
    tags: []
    x: 160
    y: 440
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
  - boot_disk_size: null
    configuration: |-
      # this is a shell script which will be sourced at boot
      hostname inserthostname-here
      # configurable user account
      USERNAME=cisco
      PASSWORD=cisco
      # no password for tc user by default
      TC_PASSWORD=
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n17
    image_definition: null
    label: S-4
    node_definition: server
    ram: null
    tags: []
    x: 480
    y: 400
    interfaces:
      - id: i0
        label: eth0
        slot: 0
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n18
    image_definition: null
    label: ISN1-site1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -120
    y: -240
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n19
    image_definition: null
    label: ISN2-site1
    node_definition: nxosv9000
    ram: null
    tags: []
    x: -120
    y: -160
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n20
    image_definition: null
    label: ISN1-site2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 120
    y: -240
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
  - boot_disk_size: null
    configuration: |-
      hostname inserthostname-here
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n21
    image_definition: nxosv9300-9-3-6
    label: ISN2-site2
    node_definition: nxosv9000
    ram: null
    tags: []
    x: 120
    y: -160
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
  - boot_disk_size: null
    configuration: ums-ad78aa00-70
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: true
    id: n22
    image_definition: null
    label: unmanaged-switch-1
    node_definition: unmanaged_switch
    ram: null
    tags: []
    x: -920
    y: 80
    interfaces:
      - id: i0
        label: port0
        slot: 0
        type: physical
      - id: i1
        label: port1
        slot: 1
        type: physical
      - id: i2
        label: port2
        slot: 2
        type: physical
      - id: i3
        label: port3
        slot: 3
        type: physical
      - id: i4
        label: port4
        slot: 4
        type: physical
      - id: i5
        label: port5
        slot: 5
        type: physical
      - id: i6
        label: port6
        slot: 6
        type: physical
      - id: i7
        label: port7
        slot: 7
        type: physical
      - id: i8
        label: port8
        slot: 8
        type: physical
      - id: i9
        label: port9
        slot: 9
        type: physical
      - id: i10
        label: port10
        slot: 10
        type: physical
      - id: i11
        label: port11
        slot: 11
        type: physical
      - id: i12
        label: port12
        slot: 12
        type: physical
      - id: i13
        label: port13
        slot: 13
        type: physical
      - id: i14
        label: port14
        slot: 14
        type: physical
      - id: i15
        label: port15
        slot: 15
        type: physical
  - boot_disk_size: null
    configuration: bridge1
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n23
    image_definition: null
    label: ext-conn-1
    node_definition: external_connector
    ram: null
    tags: []
    x: -880
    y: -80
    interfaces:
      - id: i0
        label: port
        slot: 0
        type: physical
links:
  - id: l0
    n1: n2
    n2: n0
    i1: i2
    i2: i2
    conditioning: {}
    label: L1-site1-Ethernet1/1<->S1-site1-Ethernet1/1
  - id: l1
    n1: n2
    n2: n1
    i1: i3
    i2: i2
    conditioning: {}
    label: L1-site1-Ethernet1/2<->S2-site1-Ethernet1/1
  - id: l2
    n1: n3
    n2: n0
    i1: i2
    i2: i3
    conditioning: {}
    label: L2-site1-Ethernet1/1<->S1-site1-Ethernet1/2
  - id: l3
    n1: n3
    n2: n1
    i1: i3
    i2: i3
    conditioning: {}
    label: L2-site1-Ethernet1/2<->S2-site1-Ethernet1/2
  - id: l4
    n1: n0
    n2: n4
    i1: i4
    i2: i2
    conditioning: {}
    label: S1-site1-Ethernet1/3<->BG1-site1-Ethernet1/1
  - id: l5
    n1: n5
    n2: n1
    i1: i3
    i2: i5
    conditioning: {}
    label: BG2-site1-Ethernet1/2<->S2-site1-Ethernet1/4
  - id: l6
    n1: n10
    n2: n8
    i1: i2
    i2: i2
    conditioning: {}
    label: L1-site2-Ethernet1/1<->S1-site2-Ethernet1/1
  - id: l7
    n1: n10
    n2: n9
    i1: i3
    i2: i2
    conditioning: {}
    label: L1-site2-Ethernet1/2<->S2-site2-Ethernet1/1
  - id: l8
    n1: n11
    n2: n8
    i1: i2
    i2: i3
    conditioning: {}
    label: L2-site2-Ethernet1/1<->S1-site2-Ethernet1/2
  - id: l9
    n1: n11
    n2: n9
    i1: i3
    i2: i3
    conditioning: {}
    label: L2-site2-Ethernet1/2<->S2-site2-Ethernet1/2
  - id: l10
    n1: n6
    n2: n8
    i1: i2
    i2: i4
    conditioning: {}
    label: BG1-site2-Ethernet1/1<->S1-site2-Ethernet1/3
  - id: l11
    n1: n6
    n2: n9
    i1: i3
    i2: i4
    conditioning: {}
    label: BG1-site2-Ethernet1/2<->S2-site2-Ethernet1/3
  - id: l12
    n1: n7
    n2: n8
    i1: i2
    i2: i5
    conditioning: {}
    label: BG2-site2-Ethernet1/1<->S1-site2-Ethernet1/4
  - id: l13
    n1: n7
    n2: n9
    i1: i3
    i2: i5
    conditioning: {}
    label: BG2-site2-Ethernet1/2<->S2-site2-Ethernet1/4
  - id: l14
    n1: n11
    n2: n12
    i1: i1
    i2: i7
    conditioning: {}
    label: L2-site2-mgmt0<->unmanaged-switch-0-port7
  - id: l15
    n1: n8
    n2: n12
    i1: i1
    i2: i8
    conditioning: {}
    label: S1-site2-mgmt0<->unmanaged-switch-0-port8
  - id: l16
    n1: n9
    n2: n12
    i1: i1
    i2: i9
    conditioning: {}
    label: S2-site2-mgmt0<->unmanaged-switch-0-port9
  - id: l17
    n1: n6
    n2: n12
    i1: i1
    i2: i10
    conditioning: {}
    label: BG1-site2-mgmt0<->unmanaged-switch-0-port10
  - id: l18
    n1: n10
    n2: n12
    i1: i1
    i2: i6
    conditioning: {}
    label: L1-site2-mgmt0<->unmanaged-switch-0-port6
  - id: l19
    n1: n7
    n2: n12
    i1: i1
    i2: i11
    conditioning: {}
    label: BG2-site2-mgmt0<->unmanaged-switch-0-port11
  - id: l20
    n1: n2
    n2: n3
    i1: i6
    i2: i6
    conditioning: {}
    label: L1-site1-Ethernet1/5<->L2-site1-Ethernet1/5
  - id: l21
    n1: n10
    n2: n11
    i1: i6
    i2: i6
    conditioning: {}
    label: L1-site2-Ethernet1/5<->L2-site2-Ethernet1/5
  - id: l22
    n1: n12
    n2: n13
    i1: i23
    i2: i0
    conditioning: {}
    label: unmanaged-switch-0-port23<->ext-conn-0-port
  - id: l23
    n1: n14
    n2: n2
    i1: i0
    i2: i4
    conditioning: {}
    label: server-0-eth0<->L1-site1-Ethernet1/3
  - id: l24
    n1: n15
    n2: n3
    i1: i0
    i2: i4
    conditioning: {}
    label: server-1-eth0<->L2-site1-Ethernet1/3
  - id: l25
    n1: n16
    n2: n10
    i1: i0
    i2: i4
    conditioning: {}
    label: server-2-eth0<->L1-site2-Ethernet1/3
  - id: l26
    n1: n17
    n2: n11
    i1: i0
    i2: i4
    conditioning: {}
    label: server-3-eth0<->L2-site2-Ethernet1/3
  - id: l27
    n1: n4
    n2: n18
    i1: i4
    i2: i2
    conditioning: {}
    label: BG1-site1-Ethernet1/3<->nxos9000-0-Ethernet1/1
  - id: l28
    n1: n4
    n2: n19
    i1: i5
    i2: i2
    conditioning: {}
    label: BG1-site1-Ethernet1/4<->nxos9000-1-Ethernet1/1
  - id: l29
    n1: n5
    n2: n18
    i1: i4
    i2: i3
    conditioning: {}
    label: BG2-site1-Ethernet1/3<->nxos9000-0-Ethernet1/2
  - id: l30
    n1: n5
    n2: n19
    i1: i5
    i2: i3
    conditioning: {}
    label: BG2-site1-Ethernet1/4<->nxos9000-1-Ethernet1/2
  - id: l31
    n1: n18
    n2: n20
    i1: i4
    i2: i4
    conditioning: {}
    label: nxos9000-0-Ethernet1/3<->nxos9000-2-Ethernet1/3
  - id: l32
    n1: n19
    n2: n21
    i1: i4
    i2: i4
    conditioning: {}
    label: nxos9000-1-Ethernet1/3<->nxos9000-3-Ethernet1/3
  - id: l33
    n1: n6
    n2: n20
    i1: i4
    i2: i2
    conditioning: {}
    label: BG1-site2-Ethernet1/3<->nxos9000-2-Ethernet1/1
  - id: l34
    n1: n6
    n2: n21
    i1: i5
    i2: i2
    conditioning: {}
    label: BG1-site2-Ethernet1/4<->nxos9000-3-Ethernet1/1
  - id: l35
    n1: n7
    n2: n20
    i1: i4
    i2: i3
    conditioning: {}
    label: BG2-site2-Ethernet1/3<->nxos9000-2-Ethernet1/2
  - id: l36
    n1: n7
    n2: n21
    i1: i5
    i2: i3
    conditioning: {}
    label: BG2-site2-Ethernet1/4<->nxos9000-3-Ethernet1/2
  - id: l37
    n1: n20
    n2: n12
    i1: i1
    i2: i14
    conditioning: {}
    label: nxos9000-2-mgmt0<->unmanaged-switch-0-port14
  - id: l38
    n1: n21
    n2: n12
    i1: i1
    i2: i15
    conditioning: {}
    label: nxos9000-3-mgmt0<->unmanaged-switch-0-port15
  - id: l39
    n1: n22
    n2: n2
    i1: i0
    i2: i1
    conditioning: {}
    label: unmanaged-switch-1-port0<->L1-site1-mgmt0
  - id: l40
    n1: n22
    n2: n0
    i1: i1
    i2: i1
    conditioning: {}
    label: unmanaged-switch-1-port1<->S1-site1-mgmt0
  - id: l41
    n1: n22
    n2: n4
    i1: i2
    i2: i1
    conditioning: {}
    label: unmanaged-switch-1-port2<->BG1-site1-mgmt0
  - id: l42
    n1: n22
    n2: n5
    i1: i3
    i2: i1
    conditioning: {}
    label: unmanaged-switch-1-port3<->BG2-site1-mgmt0
  - id: l43
    n1: n22
    n2: n1
    i1: i4
    i2: i1
    conditioning: {}
    label: unmanaged-switch-1-port4<->S2-site1-mgmt0
  - id: l44
    n1: n22
    n2: n3
    i1: i5
    i2: i1
    conditioning: {}
    label: unmanaged-switch-1-port5<->L2-site1-mgmt0
  - id: l45
    n1: n23
    n2: n22
    i1: i0
    i2: i6
    conditioning: {}
    label: ext-conn-1-port<->unmanaged-switch-1-port6
  - id: l46
    n1: n0
    n2: n5
    i1: i5
    i2: i2
    conditioning: {}
    label: S1-site1-Ethernet1/4<->BG2-site1-Ethernet1/1
  - id: l47
    n1: n1
    n2: n4
    i1: i4
    i2: i3
    conditioning: {}
    label: S2-site1-Ethernet1/3<->BG1-site1-Ethernet1/2
  - id: l48
    n1: n22
    n2: n18
    i1: i8
    i2: i1
    conditioning: {}
    label: unmanaged-switch-1-port8<->ISN1-site1-mgmt0
  - id: l49
    n1: n22
    n2: n19
    i1: i9
    i2: i1
    conditioning: {}
    label: unmanaged-switch-1-port9<->ISN2-site1-mgmt0
lab:
  description: ''
  notes: ''
  title: VxLAN EVPN Multisite
  version: 0.2.1
